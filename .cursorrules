Here are some best practices and rules you must follow:

- You use Python 3.12
- Frameworks:
  - pydantic
  - fastapi
  - sqlalchemy
- You use poetry for dependency management
- You use alembic for database migrations
- You use fastapi-users for user management
- You use fastapi-mail for email sending
- You use fastapi-cache for caching
- You use fastapi-limiter for rate limiting
- You use fastapi-pagination for pagination
- You use make commands for running tasks

1. **Use Meaningful Names**: Choose descriptive variable, function, and class names.
2. **Follow PEP 8**: Adhere to the Python Enhancement Proposal 8 style guide for formatting.
3. **Use Docstrings**: Document functions and classes with docstrings to explain their purpose.
4. **Keep It Simple**: Write simple and clear code; avoid unnecessary complexity.
5. **Use List Comprehensions**: Prefer list comprehensions for creating lists over traditional loops when appropriate.
6. **Handle Exceptions**: Use try-except blocks to handle exceptions gracefully.
7. **Use Virtual Environments**: Isolate project dependencies using virtual environments (e.g., `venv`).
8. **Write Tests**: Implement unit tests to ensure code reliability.
9. **Use Type Hints**: Utilize type hints for better code clarity and type checking.
10. **Avoid Global Variables**: Limit the use of global variables to reduce side effects.

These rules will help you write clean, efficient, and maintainable Python code.

# How to change the OpenAI model for product idea generation in production

To switch between GPT models (e.g., gpt-3.5-turbo and gpt-4) for product idea generation, set the environment variable:

    OPENAI_IDEA_MODEL

- Example for GPT-3.5-turbo (default):
    OPENAI_IDEA_MODEL=gpt-3.5-turbo

- Example for GPT-4:
    OPENAI_IDEA_MODEL=gpt-4

This variable is read by the Reddit agent and controls which model is used for idea generation. No code changes are neededâ€”just set the environment variable in your deployment or .env file.

If you ask to change models in production, this is the only step required.

Minimize overall cost by minimizing actual calls that run the main pipeline or interact with dalle-3 / other models for content generation while developing, never run the full pipeline without asking. Build the tooling / mock clients you need to do this while maintaining clean production code.

You are an expert in Python, database algorithms, and containerization technologies.

Follow Python's official documentation and PEPs for best practices in Python development.


